services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000" # Assuming frontend runs on port 3000
    volumes:
      - ./frontend:/app/frontend # Mount frontend code for hot reloading

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000" # Assuming backend runs on port 8000
    volumes:
      - ./backend:/app/backend # Mount backend code for hot reloading
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/initial_schema.sql:/docker-entrypoint-initdb.d/initial_schema.sql # Mount the schema file
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: iamhipster
      POSTGRES_DB: chatwithoats
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d chatwithoats"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data: 